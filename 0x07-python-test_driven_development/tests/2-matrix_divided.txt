===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
```matrix_divided(matrix, div)`

File ``2-matrix_divided.py``

Returns a matrix: A new matrix with elements divided by a int or float

Importing the function:

	>>> matrix_dividend = __import__("2-matrix_divided").matrix_divided

Checks to realize:

	>>> matrix_dividend("Hello this isn't list", 1)
    	Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_dividend([], 1)
        []

	>>> matrix_dividend([[54, 58, 25], [12, 36, 65]], 3)
        [[18.0, 19.33, 8.33], [4.0, 12.0, 21.67]]

	>>> matrix_dividend([[24, 32], [55, 85], [88, 52]], 5)
        [[4.8, 6.4], [11.0, 17.0], [17.6, 10.4]]

	>>> matrix_dividend([[24, 35], [55]], 8)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_dividend([[2, 4], [1, 5]], "abc")
	Traceback (most recent call last):
		...
        TypeError: div must be a number

	>>> matrix_dividend([[4, 5], [55, 65]], 0)
        Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

	>>> matrix_dividend([[40, 45], [5, 85]], -5)
        [[-8.0, -9.0], [-1.0, -17.0]]

	>>> matrix_dividend([{"a": 45}, {"b": 55}], 2)
        Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_dividend([[[40, 55],[44, 45]], [[51, 63],[21, 12]]], 3)
	Traceback (most recent call last):
        	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
